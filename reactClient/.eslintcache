[{"C:\\Users\\LENOVO\\Desktop\\Progetto IS_FIA\\Progetto-IS-FIA\\reactClient\\src\\index.js":"1","C:\\Users\\LENOVO\\Desktop\\Progetto IS_FIA\\Progetto-IS-FIA\\reactClient\\src\\App.js":"2","C:\\Users\\LENOVO\\Desktop\\Progetto IS_FIA\\Progetto-IS-FIA\\reactClient\\src\\reportWebVitals.js":"3","C:\\Users\\LENOVO\\Desktop\\Progetto IS_FIA\\Progetto-IS-FIA\\reactClient\\src\\app\\navigation\\index.js":"4","C:\\Users\\LENOVO\\Desktop\\Progetto IS_FIA\\Progetto-IS-FIA\\reactClient\\src\\app\\pages\\Spec\\index.js":"5","C:\\Users\\LENOVO\\Desktop\\Progetto IS_FIA\\Progetto-IS-FIA\\reactClient\\src\\app\\pages\\Login\\index.js":"6","C:\\Users\\LENOVO\\Desktop\\Progetto IS_FIA\\Progetto-IS-FIA\\reactClient\\src\\app\\pages\\Home\\index.js":"7","C:\\Users\\LENOVO\\Desktop\\Progetto IS_FIA\\Progetto-IS-FIA\\reactClient\\src\\app\\pages\\Signup\\index.js":"8","C:\\Users\\LENOVO\\Desktop\\Progetto IS_FIA\\Progetto-IS-FIA\\reactClient\\src\\app\\pages\\NotFound\\index.js":"9","C:\\Users\\LENOVO\\Desktop\\Progetto IS_FIA\\Progetto-IS-FIA\\reactClient\\src\\app\\pages\\DoraIA\\index.js":"10","C:\\Users\\LENOVO\\Desktop\\Progetto IS_FIA\\Progetto-IS-FIA\\reactClient\\src\\app\\pages\\admin\\Reviews\\index.js":"11","C:\\Users\\LENOVO\\Desktop\\Progetto IS_FIA\\Progetto-IS-FIA\\reactClient\\src\\app\\pages\\SearchResults\\index.js":"12","C:\\Users\\LENOVO\\Desktop\\Progetto IS_FIA\\Progetto-IS-FIA\\reactClient\\src\\app\\pages\\Profile\\index.js":"13","C:\\Users\\LENOVO\\Desktop\\Progetto IS_FIA\\Progetto-IS-FIA\\reactClient\\src\\app\\pages\\admin\\SetScores\\index.js":"14","C:\\Users\\LENOVO\\Desktop\\Progetto IS_FIA\\Progetto-IS-FIA\\reactClient\\src\\app\\pages\\admin\\AddSpec\\index.js":"15","C:\\Users\\LENOVO\\Desktop\\Progetto IS_FIA\\Progetto-IS-FIA\\reactClient\\src\\app\\components\\Navbar\\index.js":"16","C:\\Users\\LENOVO\\Desktop\\Progetto IS_FIA\\Progetto-IS-FIA\\reactClient\\src\\app\\pages\\admin\\SpecList\\index.js":"17","C:\\Users\\LENOVO\\Desktop\\Progetto IS_FIA\\Progetto-IS-FIA\\reactClient\\src\\app\\components\\Navbar\\admin.js":"18","C:\\Users\\LENOVO\\Desktop\\Progetto IS_FIA\\Progetto-IS-FIA\\reactClient\\src\\app\\services\\user.service.js":"19","C:\\Users\\LENOVO\\Desktop\\Progetto IS_FIA\\Progetto-IS-FIA\\reactClient\\src\\app\\services\\spec.service.js":"20","C:\\Users\\LENOVO\\Desktop\\Progetto IS_FIA\\Progetto-IS-FIA\\reactClient\\src\\app\\services\\review.service.js":"21","C:\\Users\\LENOVO\\Desktop\\Progetto IS_FIA\\Progetto-IS-FIA\\reactClient\\src\\app\\services\\dora.service.js":"22","C:\\Users\\LENOVO\\Desktop\\Progetto IS_FIA\\Progetto-IS-FIA\\reactClient\\src\\app\\components\\SpecTable\\index.js":"23","C:\\Users\\LENOVO\\Desktop\\Progetto IS_FIA\\Progetto-IS-FIA\\reactClient\\src\\app\\components\\ReviewCard\\index.js":"24","C:\\Users\\LENOVO\\Desktop\\Progetto IS_FIA\\Progetto-IS-FIA\\reactClient\\src\\app\\components\\SpecCard\\index.js":"25","C:\\Users\\LENOVO\\Desktop\\Progetto IS_FIA\\Progetto-IS-FIA\\reactClient\\src\\app\\components\\Row\\index.js":"26","C:\\Users\\LENOVO\\Desktop\\Progetto IS_FIA\\Progetto-IS-FIA\\reactClient\\src\\app\\components\\SearchBarForm\\index.js":"27","C:\\Users\\LENOVO\\Desktop\\Progetto IS_FIA\\Progetto-IS-FIA\\reactClient\\src\\app\\components\\CreateSpecForm\\index.js":"28","C:\\Users\\LENOVO\\Desktop\\Progetto IS_FIA\\Progetto-IS-FIA\\reactClient\\src\\app\\components\\SetScoresForm\\index.js":"29","C:\\Users\\LENOVO\\Desktop\\Progetto IS_FIA\\Progetto-IS-FIA\\reactClient\\src\\app\\services\\api.js":"30","C:\\Users\\LENOVO\\Desktop\\Progetto IS_FIA\\Progetto-IS-FIA\\reactClient\\src\\app\\components\\DoraForm\\index.js":"31","C:\\Users\\LENOVO\\Desktop\\Progetto IS_FIA\\Progetto-IS-FIA\\reactClient\\src\\app\\components\\SignUpForm\\index.js":"32","C:\\Users\\LENOVO\\Desktop\\Progetto IS_FIA\\Progetto-IS-FIA\\reactClient\\src\\app\\components\\TitledAvatar\\index.js":"33","C:\\Users\\LENOVO\\Desktop\\Progetto IS_FIA\\Progetto-IS-FIA\\reactClient\\src\\app\\components\\ReviewForm\\index.js":"34","C:\\Users\\LENOVO\\Desktop\\Progetto IS_FIA\\Progetto-IS-FIA\\reactClient\\src\\app\\components\\SignInForm\\index.js":"35"},{"size":517,"mtime":1608738344235,"results":"36","hashOfConfig":"37"},{"size":1570,"mtime":1608738344185,"results":"38","hashOfConfig":"37"},{"size":375,"mtime":1608738344237,"results":"39","hashOfConfig":"37"},{"size":3000,"mtime":1609323170912,"results":"40","hashOfConfig":"37"},{"size":8425,"mtime":1609010290827,"results":"41","hashOfConfig":"37"},{"size":2518,"mtime":1609012380074,"results":"42","hashOfConfig":"37"},{"size":2314,"mtime":1609010290821,"results":"43","hashOfConfig":"37"},{"size":1446,"mtime":1609011283458,"results":"44","hashOfConfig":"37"},{"size":701,"mtime":1609010290822,"results":"45","hashOfConfig":"37"},{"size":3920,"mtime":1609010290820,"results":"46","hashOfConfig":"37"},{"size":3457,"mtime":1609010290831,"results":"47","hashOfConfig":"37"},{"size":2894,"mtime":1609010290824,"results":"48","hashOfConfig":"37"},{"size":3676,"mtime":1609010290823,"results":"49","hashOfConfig":"37"},{"size":2077,"mtime":1609010290832,"results":"50","hashOfConfig":"37"},{"size":1365,"mtime":1609010290831,"results":"51","hashOfConfig":"37"},{"size":3743,"mtime":1608738344192,"results":"52","hashOfConfig":"37"},{"size":4239,"mtime":1609322735611,"results":"53","hashOfConfig":"37"},{"size":1821,"mtime":1609010290817,"results":"54","hashOfConfig":"37"},{"size":756,"mtime":1608738344232,"results":"55","hashOfConfig":"37"},{"size":1189,"mtime":1608800240424,"results":"56","hashOfConfig":"37"},{"size":807,"mtime":1608738344230,"results":"57","hashOfConfig":"37"},{"size":440,"mtime":1608738344229,"results":"58","hashOfConfig":"37"},{"size":548,"mtime":1608738344206,"results":"59","hashOfConfig":"37"},{"size":2048,"mtime":1608738344193,"results":"60","hashOfConfig":"37"},{"size":1052,"mtime":1609010290819,"results":"61","hashOfConfig":"37"},{"size":316,"mtime":1608738344196,"results":"62","hashOfConfig":"37"},{"size":270,"mtime":1608738344200,"results":"63","hashOfConfig":"37"},{"size":3345,"mtime":1609263363088,"results":"64","hashOfConfig":"37"},{"size":1526,"mtime":1608894392255,"results":"65","hashOfConfig":"37"},{"size":795,"mtime":1609323170914,"results":"66","hashOfConfig":"37"},{"size":2663,"mtime":1609010290816,"results":"67","hashOfConfig":"37"},{"size":2558,"mtime":1608738344203,"results":"68","hashOfConfig":"37"},{"size":603,"mtime":1608738344208,"results":"69","hashOfConfig":"37"},{"size":2577,"mtime":1609010290818,"results":"70","hashOfConfig":"37"},{"size":1238,"mtime":1608738344201,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"18558x6",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"74"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"74"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"74"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"74"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"74"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"74"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"74"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"74"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"C:\\Users\\LENOVO\\Desktop\\Progetto IS_FIA\\Progetto-IS-FIA\\reactClient\\src\\index.js",[],["151","152"],"C:\\Users\\LENOVO\\Desktop\\Progetto IS_FIA\\Progetto-IS-FIA\\reactClient\\src\\App.js",[],"C:\\Users\\LENOVO\\Desktop\\Progetto IS_FIA\\Progetto-IS-FIA\\reactClient\\src\\reportWebVitals.js",[],"C:\\Users\\LENOVO\\Desktop\\Progetto IS_FIA\\Progetto-IS-FIA\\reactClient\\src\\app\\navigation\\index.js",[],"C:\\Users\\LENOVO\\Desktop\\Progetto IS_FIA\\Progetto-IS-FIA\\reactClient\\src\\app\\pages\\Spec\\index.js",["153"],"import React, { useState, useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport SpecTable from \"../../components/SpecTable\";\r\nimport ReviewCard from \"../../components/ReviewCard\";\r\nimport SpecCard from \"../../components/SpecCard\";\r\nimport { Empty, message } from 'antd';\r\n\r\nimport { AmazonOutlined } from '@ant-design/icons';\r\nimport { Row, Col, Modal, Typography, Button, Card, Breadcrumb } from 'antd';\r\nimport { faMemory } from '@fortawesome/free-solid-svg-icons'\r\nimport { faSdCard } from '@fortawesome/free-solid-svg-icons'\r\nimport { faCamera } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport { faMobileAlt } from '@fortawesome/free-solid-svg-icons'\r\nimport { faGamepad } from '@fortawesome/free-solid-svg-icons'\r\nimport { faMicrochip } from '@fortawesome/free-solid-svg-icons'\r\nimport { faAndroid } from '@fortawesome/free-brands-svg-icons'\r\n\r\nimport { HomeOutlined } from '@ant-design/icons';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { getSpecById } from \"../../services/spec.service\"\r\nimport ReviewForm from \"../../components/ReviewForm\";\r\nimport { addReview } from \"../../services/review.service\"\r\nimport { AuthContext } from \"../../../App\";\r\n\r\n\r\nconst { Title } = Typography;\r\nfunction useQuery() {\r\n    return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nconst formatSpecDescription = item => {\r\n    let string = \"\"\r\n    if (item.so) string += \"OS: \" + item.so\r\n    if (item.memory) string += \"  Memory: \" + item.memory\r\n    if (item.ram) string += \"  RAM: \" + item.ram\r\n    return string\r\n}\r\n\r\nfunction Spec(props) {\r\n\r\n    let query = useQuery();\r\n    const specId = query.get(\"id\")\r\n    const { state } = React.useContext(AuthContext);\r\n    const history = useHistory();\r\n\r\n    const [spec, setSpec] = useState({\r\n        name: \"\",\r\n        image: \"\"\r\n    })\r\n    const [specTable, setSpecTable] = useState([])\r\n    const [points, setPoints] = useState([])\r\n\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n    const showModal = () => setIsModalVisible(true);\r\n\r\n    const saveReview = data => {\r\n        if (!state.token) {\r\n            message.error('You need to log in to add a review');\r\n            history.push(\"/login\")\r\n        } else {\r\n            addReview({ ...data, specId }, state.token)\r\n                .then(res => {\r\n                    message.success('Review added ... Will be checked shortly');\r\n                    console.log(res)\r\n                    setIsModalVisible(false);\r\n                })\r\n                .catch(err => {\r\n                    message.error(err.response.data.message)\r\n                    console.log(err)\r\n                })\r\n        }\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        setIsModalVisible(false);\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        getSpecById(specId)\r\n            .then(res => {\r\n                console.log(res)\r\n                setSpec(res)\r\n            })\r\n            .catch(err => {\r\n                history.push(\"/404\")\r\n                console.log(err)\r\n            })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (spec) {\r\n            console.log(JSON.parse(JSON.stringify(spec)))\r\n            const data = [\r\n                {\r\n                    key: \"SO\",\r\n                    value: spec.so,\r\n                    icon: faAndroid\r\n                },\r\n                {\r\n                    key: \"cpu\",\r\n                    value: spec.cpu,\r\n                    icon: faMicrochip\r\n                },\r\n                {\r\n                    key: \"chipset\",\r\n                    value: spec.chipset,\r\n                    icon: faMemory\r\n                },\r\n                {\r\n                    key: \"gpu\",\r\n                    value: spec.gpu,\r\n                    icon: faGamepad\r\n                },\r\n                {\r\n                    key: \"ram\",\r\n                    value: spec.ram,\r\n                    icon: faMemory\r\n                },\r\n                {\r\n                    key: \"storage\",\r\n                    value: spec.memory,\r\n                    icon: faSdCard\r\n                },\r\n                {\r\n                    key: \"screenSize\",\r\n                    value: spec.screenSize,\r\n                    icon: faMobileAlt\r\n                }\r\n            ]\r\n            const tempPoints = [\r\n                {\r\n                    key: \"Display\",\r\n                    value: String(spec.display),\r\n                    icon: faMobileAlt\r\n                },\r\n                {\r\n                    key: \"Camera\",\r\n                    value: String(spec.camera),\r\n                    icon: faCamera\r\n                },\r\n                {\r\n                    key: \"Performance\",\r\n                    value: String(spec.performance),\r\n                    icon: faMicrochip\r\n                },\r\n\r\n            ]\r\n            console.log(data)\r\n            setSpecTable(data)\r\n            setPoints(tempPoints)\r\n        }\r\n\r\n    }, [spec])\r\n\r\n\r\n    return (\r\n        <div style={{ marginTop: \"20px\" }}>\r\n            <Breadcrumb>\r\n                <Breadcrumb.Item href=\"/home\">\r\n                    <HomeOutlined />\r\n                </Breadcrumb.Item>\r\n                <Breadcrumb.Item>{spec.name}</Breadcrumb.Item>\r\n            </Breadcrumb>\r\n            <Row>\r\n                <Col xs={{ span: 5, offset: 1 }} lg={{ span: 6, offset: 2 }}>\r\n\r\n                    <div style={{ alignItems: \"center\", width: \"100%\", display: \"flex\", flexDirection: \"column\" }}>\r\n                        <SpecCard\r\n                            imageUrl={spec.image}\r\n                            title={spec.name + \" - \" + spec.price + \"€\"}\r\n                            description={formatSpecDescription(spec)}\r\n                        />\r\n\r\n                        <Button shape=\"round\" style={{ backgroundColor: \"#ff9900\" }} icon={<AmazonOutlined />}\r\n                            onClick={() => {\r\n                                const amzUrl = \"https://www.amazon.it/s?k=\"\r\n                                window.location.href = amzUrl + spec.name\r\n                            }}\r\n                        >\r\n                            Buy on Amazon\r\n                        </Button>\r\n                    </div>\r\n\r\n                </Col>\r\n                <Col xs={{ span: 11, offset: 1 }} lg={{ span: 6, offset: 2 }}>\r\n                    <div style={{ alignItems: \"center\", width: \"100%\", display: \"flex\", flexDirection: \"column\" }}>\r\n                        <Title>{spec.name}</Title>\r\n                        {\r\n                            spec && spec.reviewer &&\r\n                            <Card title={\"Scores offered by \" + spec.reviewer.username}>\r\n                                <SpecTable\r\n                                    data={points}\r\n                                />\r\n                            </Card>\r\n                        }\r\n\r\n                        <Card title=\"Data sheet\" style={{ marginTop: \"20px\" }}>\r\n                            <SpecTable\r\n                                data={specTable}\r\n                            />\r\n                        </Card>\r\n\r\n\r\n                    </div>\r\n                </Col>\r\n                <Col xs={{ span: 5, offset: 1 }} lg={{ span: 6, offset: 2 }}>\r\n\r\n                    <div style={{ alignItems: \"center\", width: \"100%\", display: \"flex\", flexDirection: \"column\" }}>\r\n                        {\r\n                            spec && spec.reviews && spec.reviews.length > 0 ? spec.reviews.map(review =>\r\n                                <ReviewCard\r\n                                    title={review.user.username}\r\n                                    camera={review.camera}\r\n                                    display={review.display}\r\n                                    performance={review.performance}\r\n                                    battery={review.battery}\r\n                                    description={review.text}\r\n                                />)\r\n                                :\r\n                                <Empty />\r\n                        }\r\n                        <Button type=\"primary\" onClick={() => showModal()}>Add review</Button>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Modal title=\"Add new review\" visible={isModalVisible} footer={[]} onCancel={handleCancel}>\r\n                <ReviewForm onSave={saveReview} />\r\n            </Modal>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Spec","C:\\Users\\LENOVO\\Desktop\\Progetto IS_FIA\\Progetto-IS-FIA\\reactClient\\src\\app\\pages\\Login\\index.js",[],"C:\\Users\\LENOVO\\Desktop\\Progetto IS_FIA\\Progetto-IS-FIA\\reactClient\\src\\app\\pages\\Home\\index.js",["154"],"import React, { useState, useEffect } from \"react\";\r\nimport SpecCard from \"../../components/SpecCard\";\r\nimport { Button } from 'antd';\r\nimport { DownloadOutlined } from '@ant-design/icons';\r\nimport { Link } from \"react-router-dom\";\r\nimport { Typography } from 'antd';\r\nimport { getAll } from \"../../services/spec.service\"\r\nimport { Pagination } from 'antd';\r\n\r\nconst { Title } = Typography;\r\nconst formatSpecDescription = item => {\r\n    let string = \"\"\r\n    if (item.so) string += \"OS: \" + item.so\r\n    if (item.memory) string += \"  Memory: \" + item.memory\r\n    if (item.ram) string += \"  RAM: \" + item.ram\r\n    return string\r\n}\r\nfunction Home(props) {\r\n\r\n\r\n    const [data, setData] = useState([])\r\n    const pageSize = 10\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n\r\n    useEffect(() => {\r\n        getAll()\r\n            .then(res => {\r\n                console.log(res)\r\n                setData(res)\r\n            })\r\n    }, [])\r\n\r\n    return (\r\n        <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}>\r\n            <Title level={2} style={{ margin: \"0x\", marginTop: \"20px\" }}>Are you looking for a smartphone?</Title>\r\n            <Link to=\"/dora\" >\r\n                <Button type=\"primary\" shape=\"round\" icon={<DownloadOutlined />} >Discover DoraIA</Button>\r\n            </Link>\r\n\r\n            <Title style={{ marginTop: \"20px\" }}>New arrivals</Title>\r\n            <div style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"center\", flexWrap: \"wrap\" }}>\r\n                {\r\n                    data.slice(pageSize * (currentPage - 1), pageSize * (currentPage)).map((item, index) =>\r\n                        <SpecCard\r\n                            key={index}\r\n                            imageUrl={item.image}\r\n                            title={item.name + \" - \" + item.price+\"€\"}\r\n                            description={formatSpecDescription(item)}\r\n                            id={item.id}\r\n                        />\r\n                    )\r\n                }\r\n            </div>\r\n            <Pagination size=\"small\"\r\n                total={pageSize}\r\n                onChange={setCurrentPage}\r\n                total={data && data.length}\r\n                showSizeChanger={false}\r\n            />\r\n\r\n\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home","C:\\Users\\LENOVO\\Desktop\\Progetto IS_FIA\\Progetto-IS-FIA\\reactClient\\src\\app\\pages\\Signup\\index.js",[],"C:\\Users\\LENOVO\\Desktop\\Progetto IS_FIA\\Progetto-IS-FIA\\reactClient\\src\\app\\pages\\NotFound\\index.js",[],"C:\\Users\\LENOVO\\Desktop\\Progetto IS_FIA\\Progetto-IS-FIA\\reactClient\\src\\app\\pages\\DoraIA\\index.js",["155"],"import { useState, useEffect } from \"react\"\r\nimport { Card } from \"antd\";\r\nimport React from \"react\";\r\nimport DoraForm from \"../../components/DoraForm\";\r\nimport { Breadcrumb } from 'antd';\r\nimport { HomeOutlined } from '@ant-design/icons';\r\nimport { searchWithDoraIa } from \"../../services/dora.service\"\r\nimport SpecCard from \"../../components/SpecCard\";\r\nimport Row from \"../../components/Row\";\r\nimport { AuthContext } from \"../../../App\";\r\nimport { message } from 'antd';\r\nimport { Spin } from 'antd';\r\n\r\nconst formatSpecDescription = item => {\r\n    let string = \"\"\r\n    if (item.so) string += \"OS: \" + item.so\r\n    if (item.memory) string += \"  Memory: \" + item.memory\r\n    if (item.ram) string += \"  RAM: \" + item.ram\r\n    return string\r\n}\r\n\r\n\r\nfunction DoraIA(props) {\r\n\r\n    const [results, setResults] = useState([])\r\n    const [loading, setLoading] = useState(false)\r\n    const { state } = React.useContext(AuthContext);\r\n\r\n    //TODO: Dora non filtra correttamente in base al prezzo, fixa questa cosa\r\n\r\n    return (\r\n        <div>\r\n            <Breadcrumb>\r\n                <Breadcrumb.Item href=\"/home\">\r\n                    <HomeOutlined />\r\n                </Breadcrumb.Item>\r\n                <Breadcrumb.Item href=\"/dora\">\r\n                    <span>DoraIA</span>\r\n                </Breadcrumb.Item>\r\n            </Breadcrumb>\r\n            <div style={{ marginTop: \"20px\", display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}>\r\n                <Spin spinning={loading} tip=\"Dora l'esploratrice sta cercando...\"\r\n                    size=\"large\">\r\n                    <Card title=\"DoraIA\" style={{ margin: \"20px\", width: \"300px\" }} >\r\n                        <DoraForm\r\n                            onSearch={(values) => {\r\n                                if (state && state.token) {\r\n                                    console.log(values)\r\n                                    setLoading(true)\r\n                                    message.warning('Aspetta qualche secondo');\r\n                                    searchWithDoraIa(values, state.token)\r\n                                        .then(res => {\r\n                                            setLoading(false)\r\n                                            console.log(res)\r\n                                            setResults(res)\r\n                                        })\r\n                                        .catch(err => {\r\n                                            console.log(err)\r\n                                            setLoading(false)\r\n                                            message.error('Unable to load data from DoraIA');\r\n                                        })\r\n                                } else {\r\n                                    message.error(\"You must register in order to use DoraIA\");\r\n                                }\r\n\r\n                            }} />\r\n                    </Card>\r\n                </Spin>\r\n\r\n                {\r\n                    results.length > 0 &&\r\n                    <div>\r\n                        <h3>Search Results</h3>\r\n                        <Row style={{ flexWrap: \"wrap\" }}>\r\n                            {\r\n                                results.map((item, index) =>\r\n                                    <SpecCard\r\n                                        key={index}\r\n                                        imageUrl={item.image}\r\n                                        title={item.name + \" - \" + item.price+\"€\"}\r\n                                        description={formatSpecDescription(item)}\r\n                                        id={item.id}\r\n                                        openInNewTab={true}\r\n                                    />\r\n                                )\r\n                            }</Row>\r\n                    </div>\r\n                }\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DoraIA","C:\\Users\\LENOVO\\Desktop\\Progetto IS_FIA\\Progetto-IS-FIA\\reactClient\\src\\app\\pages\\admin\\Reviews\\index.js",["156"],"import React, { useState, useEffect } from \"react\";\r\nimport { Table, Button, Modal, message } from 'antd';\r\nimport { getPendingReviews } from \"../../../services/review.service\"\r\nimport ReviewCard from \"../../../components/ReviewCard\";\r\nimport { changeReviewStatus } from \"../../../services/review.service\"\r\nimport { AuthContext } from \"../../../../App\";\r\n\r\nfunction Reviews(props) {\r\n\r\n    const [data, setData] = useState([])\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    const [reviewDetail, setReviewDetail] = useState()\r\n    const { state } = React.useContext(AuthContext);\r\n\r\n\r\n    useEffect(() => {\r\n        loadPendingReviews()\r\n    }, [])\r\n\r\n\r\n    const loadPendingReviews = () => {\r\n        setReviewDetail(undefined)\r\n        getPendingReviews(state.token)\r\n            .then(res => {\r\n                const tempData = res.map(item => ({ ...item, title: item.spec.name + \" | \" + item.user.username }))\r\n                setData(tempData)\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n                message.error(err.response.data.message)\r\n            })\r\n    }\r\n\r\n\r\n    const renderReviewDetails = review => {\r\n        setReviewDetail(review)\r\n    }\r\n    const handleCancel = () => {\r\n        setReviewDetail(undefined)\r\n    };\r\n\r\n    useEffect(() => {\r\n        setIsModalVisible(!!reviewDetail);\r\n    }, [reviewDetail])\r\n\r\n    const approveReview = review => setStatusReview(review, true)\r\n    const rejectReview = review => setStatusReview(review, false)\r\n\r\n    const setStatusReview = (review, newState) => {\r\n        changeReviewStatus({ id: review.id, approved: newState }, state.token)\r\n            .then(res => {\r\n                console.log(res)\r\n                message.success('Correctly updated review');\r\n                loadPendingReviews()\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n                message.error(err.response.data.message)\r\n            })\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Reviews to be evaluated',\r\n            dataIndex: 'title',\r\n            key: 'title',\r\n        }\r\n    ];\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Table\r\n                dataSource={data}\r\n                columns={columns}\r\n                onRow={(record, rowIndex) => {\r\n                    return {\r\n                        onClick: event => { renderReviewDetails(record) },\r\n\r\n                    };\r\n                }}\r\n            />\r\n            <Modal title=\"Review details\" visible={isModalVisible} onCancel={handleCancel}\r\n                footer={[\r\n                    <Button onClick={() => { rejectReview(reviewDetail) }}>\r\n                        Reject\r\n                    </Button>,\r\n                    <Button type=\"primary\" onClick={() => { approveReview(reviewDetail) }}>\r\n                        Approve\r\n                    </Button>,\r\n                ]}>\r\n                {\r\n                    reviewDetail && <ReviewCard\r\n                        title={reviewDetail.user.email}\r\n                        camera={reviewDetail.camera}\r\n                        display={reviewDetail.display}\r\n                        performance={reviewDetail.performance}\r\n                        battery={reviewDetail.battery}\r\n                        description={reviewDetail.text}\r\n                    />\r\n                }\r\n\r\n            </Modal>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Reviews","C:\\Users\\LENOVO\\Desktop\\Progetto IS_FIA\\Progetto-IS-FIA\\reactClient\\src\\app\\pages\\SearchResults\\index.js",["157"],"import React, { useState, useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport SpecCard from \"../../components/SpecCard\";\r\nimport { Button } from 'antd';\r\nimport { DownloadOutlined } from '@ant-design/icons';\r\nimport { Link } from \"react-router-dom\";\r\nimport { Typography } from 'antd';\r\nimport { search } from \"../../services/spec.service\"\r\nimport { Pagination, message } from 'antd';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Empty } from 'antd';\r\n\r\nconst { Title } = Typography;\r\nfunction useQuery() {\r\n    return new URLSearchParams(useLocation().search);\r\n}\r\n\r\n\r\nconst formatSpecDescription = item => {\r\n    let string = \"\"\r\n    if (item.so) string += \"OS: \" + item.so\r\n    if (item.memory) string += \"  Memory: \" + item.memory\r\n    if (item.ram) string += \"  RAM: \" + item.ram\r\n    return string\r\n}\r\nfunction SearchResults(props) {\r\n    let query = useQuery();\r\n    const searchQuery = query.get(\"s\")\r\n\r\n    const [data, setData] = useState([])\r\n    const pageSize = 50\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        search(searchQuery)\r\n            .then(res => {\r\n                console.log(res)\r\n                setData(res)\r\n            })\r\n            .catch(err => {\r\n                history.push(\"/404\")\r\n                console.log(err)\r\n                message.error('Unable to complete the search');\r\n            })\r\n    }, [])\r\n\r\n\r\n\r\n    return (\r\n        <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}>\r\n            <Title>Search Results</Title>\r\n            <div style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"center\", flexWrap: \"wrap\" }}>\r\n                {\r\n                    data && data.length > 0 ? data.slice(pageSize * (currentPage - 1), pageSize * (currentPage)).map((item, index) =>\r\n                        <SpecCard\r\n                            key={index}\r\n                            imageUrl={item.image}\r\n                            title={item.name + \" - \" + item.price}\r\n                            description={formatSpecDescription(item)}\r\n                            id={item.id}\r\n                        />\r\n                    )\r\n                        :\r\n                        <Empty />\r\n                }\r\n\r\n            </div>\r\n            {\r\n                data && data.length !== 0 && <Pagination size=\"small\"\r\n                    total={pageSize}\r\n                    onChange={setCurrentPage}\r\n                />\r\n            }\r\n\r\n\r\n\r\n            <Title level={2} style={{ margin: \"0x\", marginTop: \"20px\" }}>Are you looking for a smartphone?</Title>\r\n            <Link to=\"/dora\" >\r\n                <Button type=\"primary\" shape=\"round\" icon={<DownloadOutlined />} >Discover DoraIA</Button>\r\n            </Link>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default SearchResults","C:\\Users\\LENOVO\\Desktop\\Progetto IS_FIA\\Progetto-IS-FIA\\reactClient\\src\\app\\pages\\Profile\\index.js",[],"C:\\Users\\LENOVO\\Desktop\\Progetto IS_FIA\\Progetto-IS-FIA\\reactClient\\src\\app\\pages\\admin\\SetScores\\index.js",["158"],"import React, { useState, useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { AuthContext } from \"../../../../App\";\r\nimport { getSpecById, setScores } from \"../../../services/spec.service\"\r\nimport { useHistory } from \"react-router-dom\";\r\nimport SetScoresForm from \"../../../components/SetScoresForm\";\r\nimport { message } from 'antd';\r\n\r\nfunction useQuery() {\r\n    return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nfunction SetScores(props) {\r\n    let query = useQuery();\r\n    const specId = query.get(\"id\")\r\n    const { state } = React.useContext(AuthContext);\r\n    const [spec, setSpec] = useState({\r\n        name: \"\",\r\n    })\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        getSpecById(specId)\r\n            .then(res => {\r\n                console.log(res)\r\n                setSpec(res)\r\n            })\r\n            .catch(err => {\r\n                history.push(\"/404\")\r\n                console.log(err)\r\n            })\r\n    }, [])\r\n\r\n    return (\r\n        <div style={{ marginTop: \"20px\", display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}>\r\n            <h2>{spec.name}</h2>\r\n            <div>\r\n                {\r\n                    spec && spec.id &&\r\n                    <SetScoresForm\r\n                        initialValues={spec}\r\n                        onFinish={data => {\r\n                            console.log(data)\r\n                            setScores({ ...data, specId }, state.token)\r\n                                .then(res => {\r\n                                    message.success(\"Scores updated successfully\")\r\n                                    history.push(\"/admin/speclist\")\r\n                                })\r\n                                .catch(err => {\r\n                                    console.log(err)\r\n                                    message.error(err.response.data.message)\r\n                                })\r\n                        }}\r\n                    />\r\n                }\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SetScores","C:\\Users\\LENOVO\\Desktop\\Progetto IS_FIA\\Progetto-IS-FIA\\reactClient\\src\\app\\pages\\admin\\AddSpec\\index.js",[],"C:\\Users\\LENOVO\\Desktop\\Progetto IS_FIA\\Progetto-IS-FIA\\reactClient\\src\\app\\components\\Navbar\\index.js",[],"C:\\Users\\LENOVO\\Desktop\\Progetto IS_FIA\\Progetto-IS-FIA\\reactClient\\src\\app\\pages\\admin\\SpecList\\index.js",["159"],"import React, { useState, useEffect } from \"react\";\r\nimport { getAll } from \"../../../services/spec.service\"\r\nimport { Table, Button, Space, message } from 'antd';\r\nimport SearchBarForm from \"../../../components/SearchBarForm\";\r\nimport { deleteSpec } from \"../../../services/spec.service\"\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { AuthContext } from \"../../../../App\"\r\n\r\nfunction SpecList(props) {\r\n    const history = useHistory();\r\n\r\n    const [data, setData] = useState([])\r\n    const [filter, setFilter] = useState(\"\")\r\n    const [filteredData, setFilteredData] = useState([])\r\n    const { state } = React.useContext(AuthContext);\r\n\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n    const [isReviewer, setIsReviewer] = useState(false)\r\n\r\n\r\n    useEffect(() => {\r\n        if (state && state.user) {\r\n            if (state.user.phoneNumber) {\r\n                if (state.user.rank) {\r\n                    setIsReviewer(true)\r\n                } else {\r\n                    setIsAdmin(true)\r\n                }\r\n            }\r\n        }\r\n    }, [state])\r\n\r\n    useEffect(() => {\r\n        loadSpecs()\r\n    }, [])\r\n\r\n    const loadSpecs = () => {\r\n        getAll()\r\n            .then(res => {\r\n                console.log(res)\r\n                setData(res)\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (filter.trim(\"\") !== \"\") {\r\n            console.log(\"i have to filter...\")\r\n            setFilteredData(data.filter(item => item.name.toLowerCase().includes(filter.toLowerCase())))\r\n        } else {\r\n            setFilteredData(data)\r\n        }\r\n    }, [data, filter])\r\n\r\n    const deleteSelectedSpec = spec => {\r\n        console.log(spec.id)\r\n        deleteSpec(spec.id, state.token)\r\n            .then(res => {\r\n                message.success(\"Data sheet deleted\");\r\n                loadSpecs()\r\n                console.log(res)\r\n            })\r\n            .catch(err => {\r\n                message.error(err.response.data.message)\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(\"Admin: \", isAdmin, \" | Reviewer: \", isReviewer)\r\n    }, [isReviewer, isAdmin])\r\n\r\n\r\n    const [columns, setColumns] = useState([\r\n        {\r\n            title: 'Device name',\r\n            dataIndex: 'name',\r\n            key: 'name',\r\n        },\r\n        {\r\n            title: 'Release date',\r\n            dataIndex: 'date',\r\n            key: 'date',\r\n        }\r\n    ]);\r\n\r\n    useEffect(() => {\r\n        if (isAdmin) {\r\n            setColumns([...columns, {\r\n                title: 'Actions',\r\n                key: 'action',\r\n                render: (text, record) => (\r\n                    <Space size=\"middle\">\r\n                        <Button type=\"link\" onClick={() => {\r\n                            var ok = prompt(\"Type ok to confirm the deletion\", \"cancel\");\r\n                            if (ok === \"ok\")\r\n                                deleteSelectedSpec(record)\r\n                        }}>Delete</Button>\r\n                    </Space>\r\n                ),\r\n            },])\r\n        }\r\n    }, [isAdmin])\r\n\r\n    const setScores = id => history.push(\"/admin/setscores?id=\" + id)\r\n\r\n    return (\r\n        <div style={{ marginTop: \"20px\", display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}>\r\n            <div style={{ margin: \"20px\" }}>\r\n                <SearchBarForm\r\n                    onSearch={data => {\r\n                        setFilter(data)\r\n                    }} />\r\n            </div>\r\n\r\n            <Table\r\n                dataSource={filteredData}\r\n                columns={columns}\r\n                onRow={(record, rowIndex) => {\r\n                    return {\r\n                        onClick: event => {\r\n                            if (isReviewer) {\r\n                                setScores(record.id)\r\n                            }\r\n                        },\r\n\r\n                    };\r\n                }}\r\n            />\r\n            {\r\n                isAdmin &&\r\n                <Button type=\"primary\" style={{ marginTop: \"20px\" }} onClick={() => {\r\n                    history.push(\"/admin/createSpec\")\r\n                }}> Add data sheet</Button>\r\n            }\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SpecList","C:\\Users\\LENOVO\\Desktop\\Progetto IS_FIA\\Progetto-IS-FIA\\reactClient\\src\\app\\components\\Navbar\\admin.js",["160","161","162"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Layout, } from 'antd';\r\nimport Row from \"../Row\";\r\nimport { Button } from 'antd';\r\nimport { Avatar } from 'antd';\r\nimport { HomeOutlined } from '@ant-design/icons';\r\nimport { AuthContext } from \"../../../App\";\r\n\r\nconst { Header } = Layout;\r\nfunction AdminNavbar(props) {\r\n    const { state } = React.useContext(AuthContext);\r\n\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n    const [isReviewer, setIsReviewer] = useState(false)\r\n\r\n\r\n    useEffect(() => {\r\n        if (state && state.user) {\r\n            if (state.user.phoneNumber) {\r\n                if (state.user.rank) {\r\n                    setIsReviewer(true)\r\n                } else {\r\n                    setIsAdmin(true)\r\n                }\r\n            }\r\n        }\r\n    }, [state])\r\n\r\n    return (\r\n        <Row style={{ height: \"100%\", justifyContent: \"space-between\" }}>\r\n            <Link to=\"/home\" >\r\n                <h1>SmartBlog</h1>\r\n            </Link>\r\n\r\n            <Row style={{ maxWidth: \"400px\" }}>\r\n\r\n                <div style={{ marginLeft: \"20px\" }}>\r\n                    <Link to=\"/admin/speclist\" style={{ marginRight: \"20px\" }}>\r\n                        Technical data sheets list\r\n                    </Link>\r\n\r\n                    {isReviewer &&\r\n                        <Link to=\"/admin/reviews\" style={{ marginRight: \"20px\" }}>\r\n                            Reviews\r\n                        </Link>\r\n                    }\r\n                    <Link to=\"/home\" >\r\n                        <Avatar style={{ backgroundColor: \"#f56a00\", verticalAlign: 'middle' }} size=\"large\" icon={<HomeOutlined />} />\r\n                    </Link>\r\n                </div>\r\n            </Row>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default AdminNavbar","C:\\Users\\LENOVO\\Desktop\\Progetto IS_FIA\\Progetto-IS-FIA\\reactClient\\src\\app\\services\\user.service.js",[],"C:\\Users\\LENOVO\\Desktop\\Progetto IS_FIA\\Progetto-IS-FIA\\reactClient\\src\\app\\services\\spec.service.js",[],"C:\\Users\\LENOVO\\Desktop\\Progetto IS_FIA\\Progetto-IS-FIA\\reactClient\\src\\app\\services\\review.service.js",[],"C:\\Users\\LENOVO\\Desktop\\Progetto IS_FIA\\Progetto-IS-FIA\\reactClient\\src\\app\\services\\dora.service.js",[],"C:\\Users\\LENOVO\\Desktop\\Progetto IS_FIA\\Progetto-IS-FIA\\reactClient\\src\\app\\components\\SpecTable\\index.js",[],"C:\\Users\\LENOVO\\Desktop\\Progetto IS_FIA\\Progetto-IS-FIA\\reactClient\\src\\app\\components\\ReviewCard\\index.js",[],"C:\\Users\\LENOVO\\Desktop\\Progetto IS_FIA\\Progetto-IS-FIA\\reactClient\\src\\app\\components\\SpecCard\\index.js",[],"C:\\Users\\LENOVO\\Desktop\\Progetto IS_FIA\\Progetto-IS-FIA\\reactClient\\src\\app\\components\\Row\\index.js",[],"C:\\Users\\LENOVO\\Desktop\\Progetto IS_FIA\\Progetto-IS-FIA\\reactClient\\src\\app\\components\\SearchBarForm\\index.js",[],"C:\\Users\\LENOVO\\Desktop\\Progetto IS_FIA\\Progetto-IS-FIA\\reactClient\\src\\app\\components\\CreateSpecForm\\index.js",[],"C:\\Users\\LENOVO\\Desktop\\Progetto IS_FIA\\Progetto-IS-FIA\\reactClient\\src\\app\\components\\SetScoresForm\\index.js",[],"C:\\Users\\LENOVO\\Desktop\\Progetto IS_FIA\\Progetto-IS-FIA\\reactClient\\src\\app\\services\\api.js",[],"C:\\Users\\LENOVO\\Desktop\\Progetto IS_FIA\\Progetto-IS-FIA\\reactClient\\src\\app\\components\\DoraForm\\index.js",[],"C:\\Users\\LENOVO\\Desktop\\Progetto IS_FIA\\Progetto-IS-FIA\\reactClient\\src\\app\\components\\SignUpForm\\index.js",[],"C:\\Users\\LENOVO\\Desktop\\Progetto IS_FIA\\Progetto-IS-FIA\\reactClient\\src\\app\\components\\TitledAvatar\\index.js",[],"C:\\Users\\LENOVO\\Desktop\\Progetto IS_FIA\\Progetto-IS-FIA\\reactClient\\src\\app\\components\\ReviewForm\\index.js",[],"C:\\Users\\LENOVO\\Desktop\\Progetto IS_FIA\\Progetto-IS-FIA\\reactClient\\src\\app\\components\\SignInForm\\index.js",[],{"ruleId":"163","replacedBy":"164"},{"ruleId":"165","replacedBy":"166"},{"ruleId":"167","severity":1,"message":"168","line":92,"column":8,"nodeType":"169","endLine":92,"endColumn":10,"suggestions":"170"},{"ruleId":"171","severity":1,"message":"172","line":57,"column":17,"nodeType":"173","endLine":57,"endColumn":44},{"ruleId":"174","severity":1,"message":"175","line":1,"column":20,"nodeType":"176","messageId":"177","endLine":1,"endColumn":29},{"ruleId":"167","severity":1,"message":"178","line":18,"column":8,"nodeType":"169","endLine":18,"endColumn":10,"suggestions":"179"},{"ruleId":"167","severity":1,"message":"180","line":46,"column":8,"nodeType":"169","endLine":46,"endColumn":10,"suggestions":"181"},{"ruleId":"167","severity":1,"message":"168","line":32,"column":8,"nodeType":"169","endLine":32,"endColumn":10,"suggestions":"182"},{"ruleId":"167","severity":1,"message":"183","line":102,"column":8,"nodeType":"169","endLine":102,"endColumn":17,"suggestions":"184"},{"ruleId":"174","severity":1,"message":"185","line":5,"column":10,"nodeType":"176","messageId":"177","endLine":5,"endColumn":16},{"ruleId":"174","severity":1,"message":"186","line":10,"column":9,"nodeType":"176","messageId":"177","endLine":10,"endColumn":15},{"ruleId":"174","severity":1,"message":"187","line":14,"column":12,"nodeType":"176","messageId":"177","endLine":14,"endColumn":19},"no-native-reassign",["188"],"no-negated-in-lhs",["189"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'specId'. Either include them or remove the dependency array.","ArrayExpression",["190"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'loadPendingReviews'. Either include it or remove the dependency array.",["191"],"React Hook useEffect has missing dependencies: 'history' and 'searchQuery'. Either include them or remove the dependency array.",["192"],["193"],"React Hook useEffect has missing dependencies: 'columns' and 'deleteSelectedSpec'. Either include them or remove the dependency array. You can also do a functional update 'setColumns(c => ...)' if you only need 'columns' in the 'setColumns' call.",["194"],"'Button' is defined but never used.","'Header' is assigned a value but never used.","'isAdmin' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"195","fix":"196"},{"desc":"197","fix":"198"},{"desc":"199","fix":"200"},{"desc":"195","fix":"201"},{"desc":"202","fix":"203"},"Update the dependencies array to be: [history, specId]",{"range":"204","text":"205"},"Update the dependencies array to be: [loadPendingReviews]",{"range":"206","text":"207"},"Update the dependencies array to be: [history, searchQuery]",{"range":"208","text":"209"},{"range":"210","text":"205"},"Update the dependencies array to be: [columns, deleteSelectedSpec, isAdmin]",{"range":"211","text":"212"},[3049,3051],"[history, specId]",[668,670],"[loadPendingReviews]",[1464,1466],"[history, searchQuery]",[989,991],[3077,3086],"[columns, deleteSelectedSpec, isAdmin]"]